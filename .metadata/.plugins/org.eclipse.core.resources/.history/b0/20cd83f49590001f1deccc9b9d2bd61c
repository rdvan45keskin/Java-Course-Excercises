package com.javacourse.project.hibernateAndJpa.Entities;

import jakarta.persistence.*;


@Entity // Bu sınıfın bir JPA varlığı olduğunu belirtir
@Table(name = "city") // Veritabanındaki "city" tablosuna karşılık geldiğini belirtir
public class City {

    @Id // id alanının birincil anahtar olduğunu belirtir
    @GeneratedValue(strategy = GenerationType.IDENTITY) // id otomatik olarak arttırılacak
    @Column(name = "ID") // Veritabanındaki "ID" sütunu ile eşleşir
    private int id;

    @Column(name = "Name") // Veritabanındaki "Name" sütunu ile eşleşir
    private String name;

    @Column(name = "Countycode") // Veritabanındaki "CountyCode" sütunu ile eşleşir
    private String countryCode;

    @Column(name = "District") // Veritabanındaki "District" sütunu ile eşleşir
    private String district;

    @Column(name = "Population") // Veritabanındaki "Population" sütunu ile eşleşir
    private int population;

    // No-argument constructor (Hibernate için gerekli)
    public City() {
    }

    // All-arguments constructor
    public City(int id, String name, String countryCode, String district, int population) {
        this.id = id;
        this.name = name;
        this.countryCode = countryCode;
        this.district = district;
        this.population = population;
    }

    // Getters and setters
    public int getId() {
        return id;
    }

    public void setId(int id) {
        this.id = id;
    }

    public String getName() {
        return name;
    }

    public void setName(String name) {
        this.name = name;
    }

    public String getCountryCode() {
        return countryCode;
    }

    public void setCountryCode(String countryCode) {
        this.countryCode = countryCode;
    }

    public String getDistrict() {
        return district;
    }

    public void setDistrict(String district) {
        this.district = district;
    }

    public int getPopulation() {
        return population;
    }

    public void setPopulation(int population) {
        this.population = population;
    }
}